# Generated by Django 2.1.7 on 2019-04-19 08:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='check_group_mge',
            fields=[
                ('group_id', models.IntegerField(primary_key=True, serialize=False)),
                ('group_name', models.CharField(max_length=64)),
                ('group_des', models.CharField(max_length=256)),
                ('type', models.SmallIntegerField()),
                ('activate', models.SmallIntegerField()),
                ('version', models.CharField(blank=True, max_length=64, null=True)),
                ('component_name', models.CharField(blank=True, max_length=64, null=True)),
                ('creator', models.CharField(blank=True, max_length=64, null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name': '',
                'verbose_name_plural': '',
                'db_table': 'baseline_check_group_mge',
                'permissions': (),
            },
        ),
        migrations.CreateModel(
            name='check_grp_rel',
            fields=[
                ('rg_relation_id', models.IntegerField(primary_key=True, serialize=False)),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='baseline.check_group_mge')),
            ],
            options={
                'verbose_name': '',
                'verbose_name_plural': '',
                'db_table': 'baseline_check_grp_rel',
                'permissions': (),
            },
        ),
        migrations.CreateModel(
            name='check_rule_content',
            fields=[
                ('content_id', models.IntegerField(primary_key=True, serialize=False)),
                ('spl_rule_cfg', models.SmallIntegerField()),
                ('adv_rule_cfg', models.SmallIntegerField()),
                ('rule_relation', models.SmallIntegerField()),
                ('rule_content', models.TextField(blank=True, null=True)),
                ('match_content_type', models.SmallIntegerField(blank=True, null=True)),
                ('getValue_compType', models.SmallIntegerField(blank=True, null=True)),
                ('expression_compValue', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'verbose_name': '已申请策略表',
                'verbose_name_plural': '已申请总策略表',
                'db_table': 'baseline_check_rule_content',
                'permissions': (('can_read_policy', '读取策略权限'), ('can_change_policy', '更改策略权限'), ('can_add_policy', '添加策略权限'), ('can_delete_policy', '删除策略权限'), ('can_dumps_policy', '导出策略权限')),
            },
        ),
        migrations.CreateModel(
            name='check_rule_devseries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_series_id', models.BigIntegerField()),
            ],
            options={
                'verbose_name': '已申请策略表',
                'verbose_name_plural': '已申请总策略表',
                'db_table': 'baseline_check_rule_devseries',
                'permissions': (('can_read_policy', '读取策略权限'), ('can_change_policy', '更改策略权限'), ('can_add_policy', '添加策略权限'), ('can_delete_policy', '删除策略权限'), ('can_dumps_policy', '导出策略权限')),
            },
        ),
        migrations.CreateModel(
            name='check_rule_manage',
            fields=[
                ('rule_id', models.IntegerField(primary_key=True, serialize=False)),
                ('rule_name', models.CharField(max_length=64)),
                ('rule_des', models.CharField(max_length=256)),
                ('rule_severity', models.SmallIntegerField()),
                ('type', models.SmallIntegerField()),
                ('rule_standard', models.SmallIntegerField(blank=True, null=True)),
                ('exec_method', models.SmallIntegerField(blank=True, null=True)),
                ('file_path', models.CharField(blank=True, max_length=256, null=True)),
                ('check_content', models.SmallIntegerField(blank=True, null=True)),
                ('command', models.CharField(blank=True, max_length=4096, null=True)),
                ('support_firm', models.CharField(blank=True, max_length=256, null=True)),
                ('check_type', models.SmallIntegerField(blank=True, null=True)),
                ('check_content_start', models.TextField(blank=True, null=True)),
                ('check_content_end', models.TextField(blank=True, null=True)),
                ('config_command', models.TextField(blank=True, null=True)),
                ('recover_command', models.TextField(blank=True, null=True)),
                ('creator', models.CharField(blank=True, max_length=64, null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '已申请策略表',
                'verbose_name_plural': '已申请总策略表',
                'db_table': 'baseline_check_rule_manage',
                'permissions': (('can_read_policy', '读取策略权限'), ('can_change_policy', '更改策略权限'), ('can_add_policy', '添加策略权限'), ('can_delete_policy', '删除策略权限'), ('can_dumps_policy', '导出策略权限')),
            },
        ),
        migrations.AddField(
            model_name='check_rule_devseries',
            name='rule_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='baseline.check_rule_manage'),
        ),
        migrations.AddField(
            model_name='check_rule_content',
            name='rule_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='baseline.check_rule_manage'),
        ),
        migrations.AddField(
            model_name='check_grp_rel',
            name='rule_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='baseline.check_rule_manage'),
        ),
    ]
